
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6A65CD8BFBEB79DCE9C7C577BDAF4664'
    
_lr_action_items = {'ID':([1,7,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[7,12,17,12,-26,-27,-28,21,-9,-8,12,12,33,35,35,12,12,12,12,-30,12,-21,12,35,-17,-11,-15,51,35,-13,12,12,12,-25,-29,-20,-10,-14,57,-18,-12,-23,-24,-22,-19,-16,]),'IMPORT':([4,],[10,]),'RBRACE':([11,12,13,14,16,19,32,36,40,44,46,48,52,53,54,55,56,],[18,-26,-27,-28,-9,-8,-21,-11,-13,-25,-20,-10,-12,-23,-24,-22,-19,]),'INPUT':([15,],[23,]),'OUTPUT':([15,],[24,]),'LBRACE':([0,2,3,6,8,9,18,28,],[1,-5,1,-4,-2,-3,-7,-6,]),'ASSIGN':([15,],[22,]),'OP_SUB':([15,],[25,]),'OP_ADD':([15,],[27,]),'RPAREN':([12,13,14,17,21,23,24,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[-26,-27,-28,28,32,36,40,44,-30,46,-21,48,-17,-11,-15,52,-13,53,54,55,-25,-29,-20,56,-10,-14,-12,-23,-24,-22,-19,58,-16,]),'OP_MUL':([15,],[26,]),'NUMBER':([7,11,12,13,14,16,19,20,21,25,26,27,29,30,31,32,33,36,40,41,42,43,44,45,46,48,52,53,54,55,56,],[13,13,-26,-27,-28,-9,-8,13,13,13,13,13,13,-30,13,-21,13,-11,-13,13,13,13,-25,-29,-20,-10,-12,-23,-24,-22,-19,]),'$end':([2,3,5,6,8,9,18,28,],[-5,-1,0,-4,-2,-3,-7,-6,]),'LPAREN':([0,2,3,6,7,8,9,11,12,13,14,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,52,53,54,55,56,58,],[4,-5,4,-4,15,-2,-3,15,-26,-27,-28,-9,-7,-8,15,15,38,38,15,15,15,-6,15,-30,15,-21,15,38,-17,-11,-15,38,-13,15,15,15,-25,-29,-20,-10,-14,-12,-23,-24,-22,-19,-16,]),'STRING':([7,11,12,13,14,16,19,20,21,25,26,27,29,30,31,32,33,36,40,41,42,43,44,45,46,48,52,53,54,55,56,],[14,14,-26,-27,-28,-9,-8,14,14,14,14,14,14,-30,14,-21,14,-11,-13,14,14,14,-25,-29,-20,-10,-12,-23,-24,-22,-19,]),'OP_DIV':([15,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([20,21,25,26,27,],[29,31,41,42,43,]),'type':([38,],[50,]),'declaration':([23,24,34,39,],[37,37,49,49,]),'declaration_list':([23,24,],[34,39,]),'component':([0,3,],[2,8,]),'statement_list':([0,],[3,]),'expression':([7,11,20,21,25,26,27,29,31,33,41,42,43,],[16,19,30,30,30,30,30,45,45,47,45,45,45,]),'program':([0,],[5,]),'import_statement':([0,3,],[6,9,]),'expression_list':([7,],[11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
