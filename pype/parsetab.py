
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '76A07D5CF52EC961ECD9BD05F62E0AC8'
    
_lr_action_items = {'OP_ADD':([14,],[21,]),'LBRACE':([0,1,3,6,7,8,18,28,],[5,5,-4,-5,-3,-2,-6,-7,]),'OP_DIV':([14,],[19,]),'IMPORT':([2,],[9,]),'INPUT':([14,],[22,]),'RBRACE':([12,13,15,16,17,27,34,40,43,45,46,47,48,53,54,55,57,],[-9,-26,-27,-28,28,-8,-11,-21,-13,-25,-24,-22,-10,-20,-23,-12,-19,]),'ID':([5,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,13,-9,-26,24,-27,-28,13,13,13,13,35,38,13,13,35,-8,-30,13,13,13,35,-11,-17,50,-15,13,13,-21,13,35,-13,-29,-25,-24,-22,-10,-14,-18,56,-20,-23,-12,-19,-16,]),'$end':([1,3,4,6,7,8,18,28,],[-1,-4,0,-5,-3,-2,-6,-7,]),'OP_SUB':([14,],[25,]),'RPAREN':([11,13,15,16,22,24,26,29,30,31,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[18,-26,-27,-28,34,40,43,-30,45,46,47,48,-11,-17,-15,53,-21,54,55,-13,-29,-25,-24,-22,-10,-14,57,-20,-23,-12,58,-19,-16,]),'STRING':([10,12,13,15,16,17,19,20,21,24,25,27,29,30,31,32,34,38,39,40,41,43,44,45,46,47,48,53,54,55,57,],[16,-9,-26,-27,-28,16,16,16,16,16,16,-8,-30,16,16,16,-11,16,16,-21,16,-13,-29,-25,-24,-22,-10,-20,-23,-12,-19,]),'LPAREN':([0,1,3,6,7,8,10,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,58,],[2,2,-4,-5,-3,-2,14,-9,-26,-27,-28,14,-6,14,14,14,36,14,14,36,-8,-7,-30,14,14,14,36,-11,-17,-15,14,14,-21,14,36,-13,-29,-25,-24,-22,-10,-14,-20,-23,-12,-19,-16,]),'ASSIGN':([14,],[23,]),'OP_MUL':([14,],[20,]),'NUMBER':([10,12,13,15,16,17,19,20,21,24,25,27,29,30,31,32,34,38,39,40,41,43,44,45,46,47,48,53,54,55,57,],[15,-9,-26,-27,-28,15,15,15,15,15,15,-8,-30,15,15,15,-11,15,15,-21,15,-13,-29,-25,-24,-22,-10,-20,-23,-12,-19,]),'OUTPUT':([14,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([22,26,],[33,42,]),'statement_list':([0,],[1,]),'parameter_list':([19,20,21,24,25,],[30,31,32,39,41,]),'type':([36,],[51,]),'import_statement':([0,1,],[3,7,]),'expression':([10,17,19,20,21,24,25,30,31,32,38,39,41,],[12,27,29,29,29,29,29,44,44,44,52,44,44,]),'program':([0,],[4,]),'expression_list':([10,],[17,]),'component':([0,1,],[6,8,]),'declaration':([22,26,33,42,],[37,37,49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
