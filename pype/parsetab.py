
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '76A07D5CF52EC961ECD9BD05F62E0AC8'
    
_lr_action_items = {'OP_MUL':([13,],[20,]),'ASSIGN':([13,],[21,]),'$end':([1,2,5,6,9,10,18,28,],[-4,0,-5,-1,-3,-2,-7,-6,]),'LPAREN':([0,1,5,6,7,9,10,11,12,14,15,16,18,19,20,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,58,],[4,-4,-5,4,13,-3,-2,13,-28,-26,-9,-27,-7,-8,13,32,13,32,13,13,13,-6,13,-30,13,32,-15,-11,-17,13,-21,32,-13,13,13,13,-24,-29,-14,-10,-20,-12,-23,-25,-22,-19,-16,]),'INPUT':([13,],[22,]),'STRING':([7,11,12,14,15,16,19,20,23,25,26,27,29,30,31,35,37,38,40,41,42,43,44,45,50,51,52,53,54,55,56,],[12,12,-28,-26,-9,-27,-8,12,12,12,12,12,12,-30,12,-11,12,-21,-13,12,12,12,-24,-29,-10,-20,-12,-23,-25,-22,-19,]),'ID':([3,7,8,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[7,14,17,14,-28,23,-26,-9,-27,-8,14,31,36,14,36,14,14,14,14,-30,14,48,36,-15,-11,-17,14,-21,36,-13,14,14,14,-24,-29,57,-18,-14,-10,-20,-12,-23,-25,-22,-19,-16,]),'LBRACE':([0,1,5,6,9,10,18,28,],[3,-4,-5,3,-3,-2,-7,-6,]),'OUTPUT':([13,],[24,]),'OP_ADD':([13,],[27,]),'RBRACE':([11,12,14,15,16,19,35,38,40,44,50,51,52,53,54,55,56,],[18,-28,-26,-9,-27,-8,-11,-21,-13,-24,-10,-20,-12,-23,-25,-22,-19,]),'OP_SUB':([13,],[25,]),'IMPORT':([4,],[8,]),'NUMBER':([7,11,12,14,15,16,19,20,23,25,26,27,29,30,31,35,37,38,40,41,42,43,44,45,50,51,52,53,54,55,56,],[16,16,-28,-26,-9,-27,-8,16,16,16,16,16,16,-30,16,-11,16,-21,-13,16,16,16,-24,-29,-10,-20,-12,-23,-25,-22,-19,]),'OP_DIV':([13,],[26,]),'RPAREN':([12,14,16,17,22,23,24,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,35,38,40,44,-30,50,-15,-11,-17,51,-21,52,-13,53,54,55,-24,-29,56,-14,-10,-20,-12,-23,-25,-22,-19,58,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,6,],[1,9,]),'program':([0,],[2,]),'type':([32,],[47,]),'parameter_list':([20,23,25,26,27,],[29,37,41,42,43,]),'declaration':([22,24,33,39,],[34,34,49,49,]),'expression_list':([7,],[11,]),'declaration_list':([22,24,],[33,39,]),'component':([0,6,],[5,10,]),'expression':([7,11,20,23,25,26,27,29,31,37,41,42,43,],[15,19,30,30,30,30,30,45,46,45,45,45,45,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
