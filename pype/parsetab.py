
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '674B03BF23F0780B988AC9F0B7D3EDAD'
    
_lr_action_items = {'ID':([3,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[9,11,17,-26,-27,18,-28,11,-9,11,11,11,34,11,37,11,37,-8,11,-21,-30,11,11,11,11,-15,-17,37,52,-11,11,37,-13,-20,-29,-24,-25,-22,-14,-10,-18,57,-23,-12,-19,-16,]),'LBRACE':([0,2,4,5,7,8,26,28,],[3,3,-4,-5,-3,-2,-7,-6,]),'OP_MUL':([13,],[19,]),'OP_DIV':([13,],[20,]),'ASSIGN':([13,],[21,]),'NUMBER':([9,11,12,14,15,16,18,19,20,22,24,27,29,30,31,32,33,34,35,40,41,43,44,45,46,47,49,51,54,55,56,],[12,-26,-27,-28,12,-9,12,12,12,12,12,-8,12,-21,-30,12,12,12,12,-11,12,-13,-20,-29,-24,-25,-22,-10,-23,-12,-19,]),'LPAREN':([0,2,4,5,7,8,9,11,12,14,15,16,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,49,50,51,54,55,56,58,],[6,6,-4,-5,-3,-2,13,-26,-27,-28,13,-9,13,13,13,13,39,13,39,-7,-8,-6,13,-21,-30,13,13,13,13,-15,-17,39,-11,13,39,-13,-20,-29,-24,-25,-22,-14,-10,-23,-12,-19,-16,]),'STRING':([9,11,12,14,15,16,18,19,20,22,24,27,29,30,31,32,33,34,35,40,41,43,44,45,46,47,49,51,54,55,56,],[14,-26,-27,-28,14,-9,14,14,14,14,14,-8,14,-21,-30,14,14,14,14,-11,14,-13,-20,-29,-24,-25,-22,-10,-23,-12,-19,]),'OP_ADD':([13,],[22,]),'INPUT':([13,],[23,]),'RBRACE':([11,12,14,15,16,27,30,40,43,44,46,47,49,51,54,55,56,],[-26,-27,-28,26,-9,-8,-21,-11,-13,-20,-24,-25,-22,-10,-23,-12,-19,]),'IMPORT':([6,],[10,]),'$end':([1,2,4,5,7,8,26,28,],[0,-1,-4,-5,-3,-2,-7,-6,]),'OP_SUB':([13,],[24,]),'RPAREN':([11,12,14,17,18,23,25,29,30,31,32,33,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[-26,-27,-28,28,30,40,43,44,-21,-30,46,47,49,-15,-17,51,-11,54,55,-13,-20,-29,-24,-25,56,-22,-14,-10,-23,-12,-19,58,-16,]),'OUTPUT':([13,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([23,25,38,42,],[36,36,50,50,]),'program':([0,],[1,]),'parameter_list':([18,19,20,22,24,],[29,32,33,35,41,]),'statement_list':([0,],[2,]),'declaration_list':([23,25,],[38,42,]),'import_statement':([0,2,],[4,7,]),'expression_list':([9,],[15,]),'component':([0,2,],[5,8,]),'expression':([9,15,18,19,20,22,24,29,32,33,34,35,41,],[16,27,31,31,31,31,31,45,45,45,48,45,45,]),'type':([39,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
