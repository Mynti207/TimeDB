
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1728DD5C674C28D5C94CF9231A47147'
    
_lr_action_items = {'$end':([1,4,5,6,7,8,18,27,],[-1,-5,-4,0,-2,-3,-6,-7,]),'IMPORT':([2,],[9,]),'OUTPUT':([14,],[23,]),'OP_MUL':([14,],[19,]),'STRING':([10,12,13,15,16,17,19,20,21,24,26,28,29,30,31,32,33,34,39,40,41,43,44,45,46,47,49,53,54,55,56,],[12,-28,-9,-26,12,-27,12,12,12,12,12,-8,-30,12,12,12,12,-13,-21,12,-11,12,-24,-29,-23,-22,-12,-20,-10,-25,-19,]),'OP_SUB':([14,],[20,]),'OP_ADD':([14,],[21,]),'RPAREN':([11,12,15,17,23,24,25,29,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-28,-26,-27,34,39,41,-30,44,46,47,-13,-17,49,-15,-21,53,-11,54,55,-24,-29,-23,-22,56,-12,-14,-20,-10,-25,-19,58,-16,]),'ASSIGN':([14,],[22,]),'RBRACE':([12,13,15,16,17,28,34,39,41,44,46,47,49,53,54,55,56,],[-28,-9,-26,27,-27,-8,-13,-21,-11,-24,-23,-22,-12,-20,-10,-25,-19,]),'NUMBER':([10,12,13,15,16,17,19,20,21,24,26,28,29,30,31,32,33,34,39,40,41,43,44,45,46,47,49,53,54,55,56,],[17,-28,-9,-26,17,-27,17,17,17,17,17,-8,-30,17,17,17,17,-13,-21,17,-11,17,-24,-29,-23,-22,-12,-20,-10,-25,-19,]),'LPAREN':([0,1,4,5,7,8,10,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,53,54,55,56,58,],[2,2,-5,-4,-2,-3,14,-28,-9,-26,14,-27,-6,14,14,14,37,14,37,14,-7,-8,-30,14,14,14,14,-13,-17,37,-15,-21,14,-11,37,14,-24,-29,-23,-22,-12,-14,-20,-10,-25,-19,-16,]),'ID':([3,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[10,11,15,-28,-9,24,-26,15,-27,15,15,15,33,35,15,35,15,-8,-30,15,15,15,15,-13,-17,35,51,-15,-21,15,-11,35,15,-24,-29,-23,-22,-12,-14,-18,57,-20,-10,-25,-19,-16,]),'INPUT':([14,],[25,]),'OP_DIV':([14,],[26,]),'LBRACE':([0,1,4,5,7,8,18,27,],[3,3,-5,-4,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'expression':([10,16,19,20,21,24,26,30,31,32,33,40,43,],[13,28,29,29,29,29,29,45,45,45,48,45,45,]),'declaration_list':([23,25,],[36,42,]),'type':([37,],[52,]),'declaration':([23,25,36,42,],[38,38,50,50,]),'parameter_list':([19,20,21,24,26,],[30,31,32,40,43,]),'expression_list':([10,],[16,]),'component':([0,1,],[4,7,]),'import_statement':([0,1,],[5,8,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
