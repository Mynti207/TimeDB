
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D0986CF548090149FF07FC136CB2C82'
    
_lr_action_items = {'RBRACE':([13,14,15,16,17,28,37,41,43,45,47,51,52,53,54,55,56,],[-28,-27,-9,27,-26,-8,-11,-13,-21,-23,-22,-10,-24,-25,-12,-20,-19,]),'LPAREN':([0,2,4,5,8,9,10,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,45,46,47,50,51,52,53,54,55,56,58,],[1,-4,-5,1,-2,-3,12,-28,-27,-9,12,-26,-6,12,12,33,12,12,33,12,-7,-8,12,12,-30,12,33,-17,-15,-11,12,12,33,-13,12,-21,-23,-29,-22,-14,-10,-24,-25,-12,-20,-19,-16,]),'ASSIGN':([12,],[19,]),'STRING':([10,13,14,15,16,17,20,21,23,24,26,28,29,30,31,32,37,38,39,41,42,43,45,46,47,51,52,53,54,55,56,],[13,-28,-27,-9,13,-26,13,13,13,13,13,-8,13,13,-30,13,-11,13,13,-13,13,-21,-23,-29,-22,-10,-24,-25,-12,-20,-19,]),'OP_SUB':([12,],[20,]),'INPUT':([12,],[22,]),'OP_DIV':([12,],[24,]),'OP_ADD':([12,],[21,]),'NUMBER':([10,13,14,15,16,17,20,21,23,24,26,28,29,30,31,32,37,38,39,41,42,43,45,46,47,51,52,53,54,55,56,],[14,-28,-27,-9,14,-26,14,14,14,14,14,-8,14,14,-30,14,-11,14,14,-13,14,-21,-23,-29,-22,-10,-24,-25,-12,-20,-19,]),'RPAREN':([11,13,14,17,22,25,26,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,37,41,43,45,-30,47,51,-17,-15,-11,52,53,54,-13,55,-21,56,-23,-29,-22,-14,-10,-24,-25,-12,-20,-19,58,-16,]),'LBRACE':([0,2,4,5,8,9,18,27,],[6,-4,-5,6,-2,-3,-6,-7,]),'ID':([6,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[10,11,17,26,-28,-27,-9,17,-26,29,17,17,35,17,17,35,17,-8,17,17,-30,17,48,35,-17,-15,-11,17,17,35,-13,17,-21,-23,-29,-22,-18,57,-14,-10,-24,-25,-12,-20,-19,-16,]),'IMPORT':([1,],[7,]),'$end':([2,3,4,5,8,9,18,27,],[-4,0,-5,-1,-2,-3,-6,-7,]),'OP_MUL':([12,],[23,]),'OUTPUT':([12,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,5,],[4,8,]),'import_statement':([0,5,],[2,9,]),'program':([0,],[3,]),'statement_list':([0,],[5,]),'expression':([10,16,20,21,23,24,26,29,30,32,38,39,42,],[15,28,31,31,31,31,31,44,46,46,46,46,46,]),'expression_list':([10,],[16,]),'declaration':([22,25,34,40,],[36,36,50,50,]),'parameter_list':([20,21,23,24,26,],[30,32,38,39,42,]),'type':([33,],[49,]),'declaration_list':([22,25,],[34,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
