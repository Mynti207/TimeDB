
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D0986CF548090149FF07FC136CB2C82'
    
_lr_action_items = {'STRING':([10,12,13,14,16,17,19,20,21,24,26,28,29,30,31,32,33,36,39,41,42,43,44,45,46,47,51,52,53,55,57,],[12,-28,-27,-26,-9,12,12,12,12,12,12,-8,-30,12,12,-21,12,-13,-11,12,12,12,-22,-29,-24,-20,-12,-10,-25,-23,-19,]),'OP_ADD':([15,],[19,]),'LPAREN':([0,1,2,4,7,8,10,12,13,14,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,55,57,58,],[3,3,-4,-5,-3,-2,15,-28,-27,-26,-9,15,-6,15,15,15,35,35,15,15,-7,-8,-30,15,15,-21,15,-15,-13,35,-17,-11,35,15,15,15,-22,-29,-24,-20,-14,-12,-10,-25,-23,-19,-16,]),'ID':([5,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[10,11,14,-28,-27,-26,21,-9,14,14,14,14,38,38,14,42,14,-8,-30,14,14,-21,14,-15,49,-13,38,-17,-11,38,14,14,14,-22,-29,-24,-20,56,-18,-14,-12,-10,-25,-23,-19,-16,]),'OUTPUT':([15,],[22,]),'$end':([1,2,4,6,7,8,18,27,],[-1,-4,-5,0,-3,-2,-6,-7,]),'INPUT':([15,],[23,]),'ASSIGN':([15,],[25,]),'LBRACE':([0,1,2,4,7,8,18,27,],[5,5,-4,-5,-3,-2,-6,-7,]),'RPAREN':([11,12,13,14,21,22,23,29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,32,36,39,-30,44,46,-21,47,-15,-13,51,-17,-11,52,53,55,-22,-29,-24,-20,-14,-12,-10,-25,57,-23,58,-19,-16,]),'RBRACE':([12,13,14,16,17,28,32,36,39,44,46,47,51,52,53,55,57,],[-28,-27,-26,-9,27,-8,-21,-13,-11,-22,-24,-20,-12,-10,-25,-23,-19,]),'OP_MUL':([15,],[20,]),'NUMBER':([10,12,13,14,16,17,19,20,21,24,26,28,29,30,31,32,33,36,39,41,42,43,44,45,46,47,51,52,53,55,57,],[13,-28,-27,-26,-9,13,13,13,13,13,13,-8,-30,13,13,-21,13,-13,-11,13,13,13,-22,-29,-24,-20,-12,-10,-25,-23,-19,]),'OP_SUB':([15,],[26,]),'OP_DIV':([15,],[24,]),'IMPORT':([3,],[9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'declaration':([22,23,37,40,],[34,34,50,50,]),'import_statement':([0,1,],[2,7,]),'type':([35,],[48,]),'expression':([10,17,19,20,21,24,26,30,31,33,41,42,43,],[16,28,29,29,29,29,29,45,45,45,45,54,45,]),'declaration_list':([22,23,],[37,40,]),'component':([0,1,],[4,8,]),'expression_list':([10,],[17,]),'program':([0,],[6,]),'parameter_list':([19,20,21,24,26,],[30,31,33,41,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
