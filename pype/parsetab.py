
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '76A07D5CF52EC961ECD9BD05F62E0AC8'
    
_lr_action_items = {'OP_ADD':([17,],[21,]),'OP_SUB':([17,],[22,]),'IMPORT':([5,],[9,]),'OP_DIV':([17,],[23,]),'NUMBER':([10,12,13,14,15,16,19,21,22,23,24,28,29,30,31,32,33,34,38,41,42,43,44,45,46,47,48,53,54,55,56,],[12,-27,-9,12,-28,-26,-8,12,12,12,12,12,-30,12,12,12,12,12,-13,-11,-21,12,-29,-22,-23,-25,-24,-12,-10,-20,-19,]),'$end':([1,2,3,4,7,8,18,20,],[-4,-1,-5,0,-3,-2,-6,-7,]),'OP_MUL':([17,],[24,]),'RBRACE':([12,13,14,15,16,19,38,41,42,45,46,47,48,53,54,55,56,],[-27,-9,20,-28,-26,-8,-13,-11,-21,-22,-23,-25,-24,-12,-10,-20,-19,]),'INPUT':([17,],[27,]),'STRING':([10,12,13,14,15,16,19,21,22,23,24,28,29,30,31,32,33,34,38,41,42,43,44,45,46,47,48,53,54,55,56,],[15,-27,-9,15,-28,-26,-8,15,15,15,15,15,-30,15,15,15,15,15,-13,-11,-21,15,-29,-22,-23,-25,-24,-12,-10,-20,-19,]),'ID':([6,9,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,58,],[10,11,16,-27,-9,16,-28,-26,28,-8,16,16,16,16,34,39,39,16,-30,16,16,16,16,16,-15,51,39,-13,-17,39,-11,-21,16,-29,-22,-23,-25,-24,57,-18,-14,-12,-10,-20,-19,-16,]),'LPAREN':([0,1,2,3,7,8,10,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,56,58,],[5,-4,5,-5,-3,-2,17,-27,-9,17,-28,-26,-6,-8,-7,17,17,17,17,36,36,17,-30,17,17,17,17,17,-15,36,-13,-17,36,-11,-21,17,-29,-22,-23,-25,-24,-14,-12,-10,-20,-19,-16,]),'ASSIGN':([17,],[25,]),'OUTPUT':([17,],[26,]),'LBRACE':([0,1,2,3,7,8,18,20,],[6,-4,6,-5,-3,-2,-6,-7,]),'RPAREN':([11,12,15,16,26,27,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[18,-27,-28,-26,38,41,42,-30,45,46,47,48,-15,53,-13,-17,54,-11,-21,55,-29,-22,-23,-25,-24,56,-14,-12,-10,-20,-19,58,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([26,27,],[37,40,]),'import_statement':([0,2,],[1,7,]),'parameter_list':([21,22,23,24,28,],[30,31,32,33,43,]),'expression':([10,14,21,22,23,24,28,30,31,32,33,34,43,],[13,19,29,29,29,29,29,44,44,44,44,49,44,]),'statement_list':([0,],[2,]),'declaration':([26,27,37,40,],[35,35,52,52,]),'component':([0,2,],[3,8,]),'type':([36,],[50,]),'program':([0,],[4,]),'expression_list':([10,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
