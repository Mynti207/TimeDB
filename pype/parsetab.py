
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6A65CD8BFBEB79DCE9C7C577BDAF4664'
    
_lr_action_items = {'LBRACE':([0,2,3,6,8,9,27,28,],[1,-4,1,-5,-3,-2,-7,-6,]),'OP_DIV':([12,],[18,]),'NUMBER':([7,11,13,14,15,16,18,19,23,24,25,26,29,30,31,32,34,38,40,41,42,43,44,45,46,51,52,53,54,55,56,],[11,-27,-9,-26,-28,11,11,11,11,11,11,-8,-30,11,11,11,-11,-13,11,-21,11,11,-25,-29,-24,-10,-12,-23,-20,-22,-19,]),'OP_MUL':([12,],[19,]),'ASSIGN':([12,],[20,]),'INPUT':([12,],[21,]),'LPAREN':([0,2,3,6,7,8,9,11,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,50,51,52,53,54,55,56,58,],[4,-4,4,-5,12,-3,-2,-27,-9,-26,-28,12,12,12,35,35,12,12,12,-8,-7,-6,-30,12,12,12,-15,-11,35,-17,-13,35,12,-21,12,12,-25,-29,-24,-14,-10,-12,-23,-20,-22,-19,-16,]),'OUTPUT':([12,],[22,]),'OP_ADD':([12,],[25,]),'RPAREN':([11,14,15,17,21,22,24,29,30,31,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,34,38,41,-30,44,46,-15,-11,51,-17,-13,52,53,-21,54,55,-25,-29,-24,56,-14,-10,-12,-23,-20,-22,-19,58,-16,]),'IMPORT':([4,],[10,]),'RBRACE':([11,13,14,15,16,26,34,38,41,44,46,51,52,53,54,55,56,],[-27,-9,-26,-28,27,-8,-11,-13,-21,-25,-24,-10,-12,-23,-20,-22,-19,]),'ID':([1,7,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[7,14,17,-27,24,-9,-26,-28,14,14,14,32,37,37,14,14,14,-8,-30,14,14,14,-15,-11,49,37,-17,-13,37,14,-21,14,14,-25,-29,-24,57,-18,-14,-10,-12,-23,-20,-22,-19,-16,]),'OP_SUB':([12,],[23,]),'STRING':([7,11,13,14,15,16,18,19,23,24,25,26,29,30,31,32,34,38,40,41,42,43,44,45,46,51,52,53,54,55,56,],[15,-27,-9,-26,-28,15,15,15,15,15,15,-8,-30,15,15,15,-11,-13,15,-21,15,15,-25,-29,-24,-10,-12,-23,-20,-22,-19,]),'$end':([2,3,5,6,8,9,27,28,],[-4,-1,0,-5,-3,-2,-7,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,3,],[2,8,]),'declaration':([21,22,36,39,],[33,33,50,50,]),'parameter_list':([18,19,23,24,25,],[30,31,40,42,43,]),'declaration_list':([21,22,],[36,39,]),'statement_list':([0,],[3,]),'expression_list':([7,],[16,]),'type':([35,],[48,]),'expression':([7,16,18,19,23,24,25,30,31,32,40,42,43,],[13,26,29,29,29,29,29,45,45,47,45,45,45,]),'program':([0,],[5,]),'component':([0,3,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
