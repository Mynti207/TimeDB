
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '76A07D5CF52EC961ECD9BD05F62E0AC8'
    
_lr_action_items = {'INPUT':([17,],[21,]),'OP_ADD':([17,],[27,]),'$end':([2,3,4,5,8,9,18,19,],[-5,0,-1,-4,-2,-3,-6,-7,]),'OUTPUT':([17,],[26,]),'RBRACE':([12,13,14,15,16,20,29,38,40,44,48,50,51,52,53,54,57,],[-27,-28,19,-26,-9,-8,-11,-21,-13,-10,-25,-24,-20,-23,-12,-22,-19,]),'LBRACE':([0,2,4,5,8,9,18,19,],[6,-5,6,-4,-2,-3,-6,-7,]),'RPAREN':([11,12,13,15,21,24,26,29,30,31,32,34,35,36,37,38,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-28,-26,29,38,40,-11,44,-17,-15,48,-30,50,51,-21,52,-13,53,54,-10,-14,-25,-29,-24,-20,-23,-12,-22,57,58,-19,-16,]),'IMPORT':([1,],[7,]),'OP_MUL':([17,],[23,]),'ASSIGN':([17,],[28,]),'ID':([6,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,15,-27,-28,15,-26,-9,24,-8,31,15,15,15,15,31,15,43,-11,31,-17,-15,46,15,-30,15,15,-21,15,-13,31,15,15,-10,-14,-18,56,-25,-29,-24,-20,-23,-12,-22,-19,-16,]),'OP_SUB':([17,],[25,]),'OP_DIV':([17,],[22,]),'STRING':([10,12,13,14,15,16,20,22,23,24,25,27,29,34,35,36,37,38,39,40,42,43,44,48,49,50,51,52,53,54,57,],[13,-27,-28,13,-26,-9,-8,13,13,13,13,13,-11,13,-30,13,13,-21,13,-13,13,13,-10,-25,-29,-24,-20,-23,-12,-22,-19,]),'NUMBER':([10,12,13,14,15,16,20,22,23,24,25,27,29,34,35,36,37,38,39,40,42,43,44,48,49,50,51,52,53,54,57,],[12,-27,-28,12,-26,-9,-8,12,12,12,12,12,-11,12,-30,12,12,-21,12,-13,12,12,-10,-25,-29,-24,-20,-23,-12,-22,-19,]),'LPAREN':([0,2,4,5,8,9,10,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,57,58,],[1,-5,1,-4,-2,-3,17,-27,-28,17,-26,-9,-6,-7,-8,33,17,17,17,17,33,17,-11,33,-17,-15,17,-30,17,17,-21,17,-13,33,17,17,-10,-14,-25,-29,-24,-20,-23,-12,-22,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([10,],[14,]),'parameter_list':([22,23,24,25,27,],[34,36,37,39,42,]),'declaration_list':([21,26,],[30,41,]),'component':([0,4,],[2,8,]),'type':([33,],[47,]),'program':([0,],[3,]),'expression':([10,14,22,23,24,25,27,34,36,37,39,42,43,],[16,20,35,35,35,35,35,49,49,49,49,49,55,]),'statement_list':([0,],[4,]),'import_statement':([0,4,],[5,9,]),'declaration':([21,26,30,41,],[32,32,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
