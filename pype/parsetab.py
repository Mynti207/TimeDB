
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7B77CFC2E9574BE6AA62E56690011F66'
    
_lr_action_items = {'INPUT':([15,],[20,]),'OP_ADD':([15,],[21,]),'OP_MUL':([15,],[22,]),'ID':([2,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[9,14,17,14,-28,-9,-26,24,-27,-8,29,14,14,29,14,14,42,14,-17,29,-11,46,-15,14,-30,14,29,-13,14,-21,14,14,14,-10,-14,-18,56,-22,-29,-24,-12,-20,-23,-25,-19,-16,]),'STRING':([9,11,12,13,14,16,18,21,22,24,25,27,31,34,35,36,38,39,40,41,42,43,44,48,49,50,51,52,53,55,57,],[12,12,-28,-9,-26,-27,-8,12,12,12,12,12,-11,12,-30,12,-13,12,-21,12,12,12,-10,-22,-29,-24,-12,-20,-23,-25,-19,]),'LBRACE':([0,1,3,4,7,8,19,28,],[2,2,-5,-4,-2,-3,-7,-6,]),'RPAREN':([12,14,16,17,20,23,24,29,30,31,33,34,35,36,37,38,39,40,41,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,31,38,40,-17,44,-11,-15,48,-30,50,51,-13,52,-21,53,55,-10,-14,-22,-29,-24,-12,-20,-23,57,-25,58,-19,-16,]),'OUTPUT':([15,],[23,]),'$end':([1,3,4,5,7,8,19,28,],[-1,-5,-4,0,-2,-3,-7,-6,]),'OP_SUB':([15,],[25,]),'ASSIGN':([15,],[26,]),'OP_DIV':([15,],[27,]),'RBRACE':([11,12,13,14,16,18,31,38,40,44,48,50,51,52,53,55,57,],[19,-28,-9,-26,-27,-8,-11,-13,-21,-10,-22,-24,-12,-20,-23,-25,-19,]),'IMPORT':([6,],[10,]),'LPAREN':([0,1,3,4,7,8,9,11,12,13,14,16,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[6,6,-5,-4,-2,-3,15,15,-28,-9,-26,-27,-8,-7,32,15,15,32,15,15,15,-6,-17,32,-11,-15,15,-30,15,32,-13,15,-21,15,15,15,-10,-14,-22,-29,-24,-12,-20,-23,-25,-19,-16,]),'NUMBER':([9,11,12,13,14,16,18,21,22,24,25,27,31,34,35,36,38,39,40,41,42,43,44,48,49,50,51,52,53,55,57,],[16,16,-28,-9,-26,-27,-8,16,16,16,16,16,-11,16,-30,16,-13,16,-21,16,16,16,-10,-22,-29,-24,-12,-20,-23,-25,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([9,],[11,]),'type':([32,],[47,]),'statement_list':([0,],[1,]),'component':([0,1,],[3,7,]),'import_statement':([0,1,],[4,8,]),'parameter_list':([21,22,24,25,27,],[34,36,39,41,43,]),'program':([0,],[5,]),'declaration_list':([20,23,],[30,37,]),'expression':([9,11,21,22,24,25,27,34,36,39,41,42,43,],[13,18,35,35,35,35,35,49,49,49,49,54,49,]),'declaration':([20,23,30,37,],[33,33,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
