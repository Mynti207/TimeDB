
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '674B03BF23F0780B988AC9F0B7D3EDAD'
    
_lr_action_items = {'LBRACE':([0,2,3,5,7,8,18,28,],[4,-4,4,-5,-3,-2,-7,-6,]),'$end':([1,2,3,5,7,8,18,28,],[0,-4,-1,-5,-3,-2,-7,-6,]),'ASSIGN':([13,],[24,]),'OP_ADD':([13,],[20,]),'STRING':([9,11,12,14,15,16,19,20,22,25,26,27,29,30,35,36,38,39,40,41,42,43,44,45,47,50,51,53,54,55,57,],[12,12,-28,-27,-9,-26,-8,12,12,12,12,12,12,-30,-13,12,-11,12,12,12,12,-21,-29,-22,-12,-23,-10,-25,-24,-20,-19,]),'RBRACE':([11,12,14,15,16,19,35,38,43,45,47,50,51,53,54,55,57,],[18,-28,-27,-9,-26,-8,-13,-11,-21,-22,-12,-23,-10,-25,-24,-20,-19,]),'INPUT':([13,],[23,]),'ID':([4,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[9,16,17,16,-28,27,-27,-9,-26,-8,16,32,16,32,39,16,16,16,16,-30,32,-17,-15,49,-13,16,32,-11,16,16,16,16,-21,-29,-22,-14,-12,56,-18,-23,-10,-25,-24,-20,-19,-16,]),'OP_SUB':([13,],[22,]),'OP_MUL':([13,],[26,]),'OP_DIV':([13,],[25,]),'IMPORT':([6,],[10,]),'OUTPUT':([13,],[21,]),'NUMBER':([9,11,12,14,15,16,19,20,22,25,26,27,29,30,35,36,38,39,40,41,42,43,44,45,47,50,51,53,54,55,57,],[14,14,-28,-27,-9,-26,-8,14,14,14,14,14,14,-30,-13,14,-11,14,14,14,14,-21,-29,-22,-12,-23,-10,-25,-24,-20,-19,]),'LPAREN':([0,2,3,5,7,8,9,11,12,14,15,16,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,53,54,55,57,58,],[6,-4,6,-5,-3,-2,13,13,-28,-27,-9,-26,-7,-8,13,34,13,34,13,13,13,-6,13,-30,34,-17,-15,-13,13,34,-11,13,13,13,13,-21,-29,-22,-14,-12,-23,-10,-25,-24,-20,-19,-16,]),'RPAREN':([12,14,16,17,21,23,27,29,30,31,32,33,35,36,37,38,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,35,38,43,45,-30,47,-17,-15,-13,50,51,-11,53,54,55,-21,-29,-22,-14,-12,-23,-10,57,-25,-24,-20,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'import_statement':([0,3,],[2,7,]),'statement_list':([0,],[3,]),'expression_list':([9,],[11,]),'declaration_list':([21,23,],[31,37,]),'component':([0,3,],[5,8,]),'type':([34,],[48,]),'declaration':([21,23,31,37,],[33,33,46,46,]),'expression':([9,11,20,22,25,26,27,29,36,39,40,41,42,],[15,19,30,30,30,30,30,44,44,52,44,44,44,]),'parameter_list':([20,22,25,26,27,],[29,36,40,41,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
