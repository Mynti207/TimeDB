
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6A65CD8BFBEB79DCE9C7C577BDAF4664'
    
_lr_action_items = {'OP_MUL':([15,],[22,]),'ASSIGN':([15,],[19,]),'LPAREN':([0,1,2,6,8,9,10,12,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,56,58,],[4,-5,-4,4,15,-2,-3,-28,-9,-27,15,-26,-6,31,15,15,15,31,15,15,-8,-7,15,-17,-11,31,-15,-30,15,15,15,-13,31,15,-21,15,-10,-14,-29,-23,-24,-22,-12,-25,-20,-19,-16,]),'RPAREN':([11,12,14,17,20,24,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,32,39,42,-17,-11,47,-15,-30,50,51,52,-13,53,54,-21,55,56,-10,-14,-29,-23,-24,-22,-12,-25,-20,-19,58,-16,]),'NUMBER':([8,12,13,14,16,17,21,22,23,25,26,27,29,32,35,36,37,38,39,41,42,43,47,49,50,51,52,53,54,55,56,],[14,-28,-9,-27,14,-26,14,14,14,14,14,-8,14,-11,-30,14,14,14,-13,14,-21,14,-10,-29,-23,-24,-22,-12,-25,-20,-19,]),'IMPORT':([4,],[7,]),'$end':([1,2,3,6,9,10,18,28,],[-5,-4,0,-1,-2,-3,-6,-7,]),'INPUT':([15,],[20,]),'OP_SUB':([15,],[21,]),'STRING':([8,12,13,14,16,17,21,22,23,25,26,27,29,32,35,36,37,38,39,41,42,43,47,49,50,51,52,53,54,55,56,],[12,-28,-9,-27,12,-26,12,12,12,12,12,-8,12,-11,-30,12,12,12,-13,12,-21,12,-10,-29,-23,-24,-22,-12,-25,-20,-19,]),'RBRACE':([12,13,14,16,17,27,32,39,42,47,50,51,52,53,54,55,56,],[-28,-9,-27,28,-26,-8,-11,-13,-21,-10,-23,-24,-22,-12,-25,-20,-19,]),'OP_ADD':([15,],[23,]),'OUTPUT':([15,],[24,]),'LBRACE':([0,1,2,6,9,10,18,28,],[5,-5,-4,5,-2,-3,-6,-7,]),'OP_DIV':([15,],[25,]),'ID':([5,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[8,11,17,-28,-9,-27,26,17,-26,29,30,17,17,17,30,17,17,-8,17,-17,46,-11,30,-15,-30,17,17,17,-13,30,17,-21,17,57,-18,-10,-14,-29,-23,-24,-22,-12,-25,-20,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,6,],[1,9,]),'import_statement':([0,6,],[2,10,]),'program':([0,],[3,]),'expression_list':([8,],[16,]),'parameter_list':([21,22,23,25,26,],[36,37,38,41,43,]),'type':([31,],[45,]),'declaration_list':([20,24,],[33,40,]),'statement_list':([0,],[6,]),'expression':([8,16,21,22,23,25,26,29,36,37,38,41,43,],[13,27,35,35,35,35,35,44,49,49,49,49,49,]),'declaration':([20,24,33,40,],[34,34,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
