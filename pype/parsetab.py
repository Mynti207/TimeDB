
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6A65CD8BFBEB79DCE9C7C577BDAF4664'
    
_lr_action_items = {'OP_SUB':([13,],[19,]),'STRING':([10,12,14,15,16,17,19,20,21,23,25,28,29,30,31,32,33,38,39,40,41,42,44,45,46,47,50,52,54,55,57,],[12,-28,12,-27,-26,-9,12,12,12,12,12,-8,-30,12,12,12,-13,12,12,-21,12,-11,-23,-29,-22,-25,-12,-24,-20,-10,-19,]),'RPAREN':([11,12,15,16,22,25,26,29,30,31,32,33,34,36,37,38,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,33,40,42,-30,44,46,47,-13,-17,50,-15,52,-21,54,-11,55,-23,-29,-22,-25,-12,-14,-24,57,-20,-10,58,-19,-16,]),'OP_DIV':([13,],[21,]),'OUTPUT':([13,],[22,]),'LPAREN':([0,1,4,5,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,54,55,57,58,],[3,-5,3,-4,-2,-3,13,-28,13,-27,-26,-9,-6,13,13,13,35,13,13,35,-7,-8,-30,13,13,13,-13,-17,35,-15,13,13,-21,13,-11,35,-23,-29,-22,-25,-12,-14,-24,-20,-10,-19,-16,]),'RBRACE':([12,14,15,16,17,28,33,40,42,44,46,47,50,52,54,55,57,],[-28,27,-27,-26,-9,-8,-13,-21,-11,-23,-22,-25,-12,-24,-20,-10,-19,]),'OP_ADD':([13,],[20,]),'NUMBER':([10,12,14,15,16,17,19,20,21,23,25,28,29,30,31,32,33,38,39,40,41,42,44,45,46,47,50,52,54,55,57,],[15,-28,15,-27,-26,-9,15,15,15,15,15,-8,-30,15,15,15,-13,15,15,-21,15,-11,-23,-29,-22,-25,-12,-24,-20,-10,-19,]),'$end':([1,2,4,5,8,9,18,27,],[-5,0,-1,-4,-2,-3,-6,-7,]),'IMPORT':([3,],[7,]),'OP_MUL':([13,],[23,]),'ASSIGN':([13,],[24,]),'ID':([6,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[10,11,16,-28,25,16,-27,-26,-9,16,16,16,34,16,39,16,34,-8,-30,16,16,16,-13,-17,48,34,-15,16,16,-21,16,-11,34,-23,-29,-22,-25,-18,56,-12,-14,-24,-20,-10,-19,-16,]),'INPUT':([13,],[26,]),'LBRACE':([0,1,4,5,8,9,18,27,],[6,-5,6,-4,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,4,],[1,8,]),'program':([0,],[2,]),'expression_list':([10,],[14,]),'declaration':([22,26,36,43,],[37,37,51,51,]),'declaration_list':([22,26,],[36,43,]),'statement_list':([0,],[4,]),'expression':([10,14,19,20,21,23,25,30,31,32,38,39,41,],[17,28,29,29,29,29,29,45,45,45,45,53,45,]),'import_statement':([0,4,],[5,9,]),'type':([35,],[49,]),'parameter_list':([19,20,21,23,25,],[30,31,32,38,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
