
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6A65CD8BFBEB79DCE9C7C577BDAF4664'
    
_lr_action_items = {'LPAREN':([0,2,3,4,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,],[1,-5,-4,1,-2,-3,13,13,-26,-9,-27,-28,-6,-8,-7,13,13,13,13,36,13,36,-30,13,13,-21,13,13,13,-13,-17,36,-15,13,-11,36,-29,-24,-25,-20,-22,-12,-14,-23,-10,-19,-16,]),'OP_MUL':([13,],[21,]),'OP_DIV':([13,],[22,]),'ID':([5,7,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[10,11,14,14,23,-26,-9,-27,-28,-8,14,14,14,34,14,38,14,38,-30,14,14,-21,14,14,14,51,-13,-17,38,-15,14,-11,38,-29,-24,-25,-20,-22,57,-18,-12,-14,-23,-10,-19,-16,]),'STRING':([10,12,14,15,16,17,19,21,22,23,25,27,29,30,31,32,33,34,35,37,41,42,44,45,46,47,49,52,54,55,56,],[17,17,-26,-9,-27,-28,-8,17,17,17,17,17,-30,17,17,-21,17,17,17,-13,17,-11,-29,-24,-25,-20,-22,-12,-23,-10,-19,]),'NUMBER':([10,12,14,15,16,17,19,21,22,23,25,27,29,30,31,32,33,34,35,37,41,42,44,45,46,47,49,52,54,55,56,],[16,16,-26,-9,-27,-28,-8,16,16,16,16,16,-30,16,16,-21,16,16,16,-13,16,-11,-29,-24,-25,-20,-22,-12,-23,-10,-19,]),'ASSIGN':([13,],[24,]),'OP_ADD':([13,],[25,]),'RBRACE':([12,14,15,16,17,19,32,37,42,45,46,47,49,52,54,55,56,],[20,-26,-9,-27,-28,-8,-21,-13,-11,-24,-25,-20,-22,-12,-23,-10,-19,]),'OUTPUT':([13,],[26,]),'IMPORT':([1,],[7,]),'$end':([2,3,4,6,8,9,18,20,],[-5,-4,-1,0,-2,-3,-6,-7,]),'OP_SUB':([13,],[27,]),'INPUT':([13,],[28,]),'LBRACE':([0,2,3,4,8,9,18,20,],[5,-5,-4,5,-2,-3,-6,-7,]),'RPAREN':([11,14,16,17,23,26,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[18,-26,-27,-28,32,37,42,-30,45,46,-21,47,49,-13,-17,52,-15,54,-11,55,-29,-24,-25,-20,56,-22,-12,-14,-23,-10,-19,58,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([10,],[12,]),'declaration_list':([26,28,],[39,43,]),'component':([0,4,],[2,8,]),'type':([36,],[50,]),'import_statement':([0,4,],[3,9,]),'expression':([10,12,21,22,23,25,27,30,31,33,34,35,41,],[15,19,29,29,29,29,29,44,44,44,48,44,44,]),'statement_list':([0,],[4,]),'parameter_list':([21,22,23,25,27,],[30,31,33,35,41,]),'declaration':([26,28,39,43,],[40,40,53,53,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
