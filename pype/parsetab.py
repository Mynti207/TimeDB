
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D0986CF548090149FF07FC136CB2C82'
    
_lr_action_items = {'IMPORT':([4,],[10,]),'STRING':([9,11,12,14,15,16,18,19,22,23,24,27,29,30,31,32,37,38,39,40,41,43,44,45,46,49,52,53,54,55,56,],[12,-27,-28,-9,-26,12,12,12,12,12,12,-8,12,-30,12,12,-11,12,12,-21,12,-13,-29,-24,-25,-10,-22,-20,-23,-12,-19,]),'NUMBER':([9,11,12,14,15,16,18,19,22,23,24,27,29,30,31,32,37,38,39,40,41,43,44,45,46,49,52,53,54,55,56,],[11,-27,-28,-9,-26,11,11,11,11,11,11,-8,11,-30,11,11,-11,11,11,-21,11,-13,-29,-24,-25,-10,-22,-20,-23,-12,-19,]),'LBRACE':([0,1,3,6,7,8,26,28,],[2,2,-4,-5,-3,-2,-7,-6,]),'LPAREN':([0,1,3,6,7,8,9,11,12,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,52,53,54,55,56,58,],[4,4,-4,-5,-3,-2,13,-27,-28,-9,-26,13,13,13,35,13,13,13,35,-7,-8,-6,13,-30,13,13,35,-17,-15,-11,13,13,-21,13,35,-13,-29,-24,-25,-14,-10,-22,-20,-23,-12,-19,-16,]),'RBRACE':([11,12,14,15,16,27,37,40,43,45,46,49,52,53,54,55,56,],[-27,-28,-9,-26,26,-8,-11,-21,-13,-24,-25,-10,-22,-20,-23,-12,-19,]),'OP_DIV':([13,],[19,]),'OP_MUL':([13,],[18,]),'INPUT':([13,],[21,]),'$end':([1,3,5,6,7,8,26,28,],[-1,-4,0,-5,-3,-2,-7,-6,]),'OP_ADD':([13,],[22,]),'ID':([2,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[9,15,17,-27,-28,23,-9,-26,15,15,15,32,34,15,15,15,34,-8,15,-30,15,15,34,-17,50,-15,-11,15,15,-21,15,34,-13,-29,-24,-25,-14,-10,-18,57,-22,-20,-23,-12,-19,-16,]),'ASSIGN':([13,],[20,]),'RPAREN':([11,12,15,17,21,23,25,29,30,31,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[-27,-28,-26,28,37,40,43,45,-30,46,49,-17,-15,-11,52,53,-21,54,55,-13,-29,-24,-25,56,-14,-10,-22,-20,-23,-12,-19,58,-16,]),'OP_SUB':([13,],[24,]),'OUTPUT':([13,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([9,16,18,19,22,23,24,29,31,32,38,39,41,],[14,27,30,30,30,30,30,44,44,47,44,44,44,]),'statement_list':([0,],[1,]),'declaration_list':([21,25,],[33,42,]),'expression_list':([9,],[16,]),'import_statement':([0,1,],[3,7,]),'parameter_list':([18,19,22,23,24,],[29,31,38,39,41,]),'type':([35,],[51,]),'declaration':([21,25,33,42,],[36,36,48,48,]),'program':([0,],[5,]),'component':([0,1,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
