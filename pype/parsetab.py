
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '674B03BF23F0780B988AC9F0B7D3EDAD'
    
_lr_action_items = {'RPAREN':([12,13,14,17,20,21,25,29,30,31,32,34,35,36,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-26,-28,-27,28,29,34,40,-11,44,-15,-17,-21,48,-30,51,52,-13,53,54,55,-10,-14,-20,-29,57,-22,-25,-12,-24,-23,58,-19,-16,]),'OUTPUT':([16,],[25,]),'LBRACE':([0,1,3,6,7,8,19,28,],[2,2,-5,-4,-2,-3,-7,-6,]),'IMPORT':([5,],[10,]),'INPUT':([16,],[20,]),'NUMBER':([9,11,12,13,14,15,18,21,23,24,26,27,29,34,35,36,37,38,39,40,42,43,44,48,49,51,52,53,54,55,57,],[14,14,-26,-28,-27,-9,-8,14,14,14,14,14,-11,-21,14,-30,14,14,14,-13,14,14,-10,-20,-29,-22,-25,-12,-24,-23,-19,]),'ID':([2,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[9,12,17,12,-26,-28,-27,-9,21,-8,32,12,37,12,12,32,12,12,-11,32,-15,-17,46,-21,12,-30,12,12,12,-13,32,12,12,-10,-14,-18,56,-20,-29,-22,-25,-12,-24,-23,-19,-16,]),'ASSIGN':([16,],[22,]),'OP_ADD':([16,],[23,]),'OP_MUL':([16,],[26,]),'$end':([1,3,4,6,7,8,19,28,],[-1,-5,0,-4,-2,-3,-7,-6,]),'OP_SUB':([16,],[27,]),'RBRACE':([11,12,13,14,15,18,29,34,40,44,48,51,52,53,54,55,57,],[19,-26,-28,-27,-9,-8,-11,-21,-13,-10,-20,-22,-25,-12,-24,-23,-19,]),'LPAREN':([0,1,3,6,7,8,9,11,12,13,14,15,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,52,53,54,55,57,58,],[5,5,-5,-4,-2,-3,16,16,-26,-28,-27,-9,-8,-7,33,16,16,16,33,16,16,-6,-11,33,-15,-17,-21,16,-30,16,16,16,-13,33,16,16,-10,-14,-20,-29,-22,-25,-12,-24,-23,-19,-16,]),'OP_DIV':([16,],[24,]),'STRING':([9,11,12,13,14,15,18,21,23,24,26,27,29,34,35,36,37,38,39,40,42,43,44,48,49,51,52,53,54,55,57,],[13,13,-26,-28,-27,-9,-8,13,13,13,13,13,-11,-21,13,-30,13,13,13,-13,13,13,-10,-20,-29,-22,-25,-12,-24,-23,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([20,25,],[30,41,]),'statement_list':([0,],[1,]),'declaration':([20,25,30,41,],[31,31,45,45,]),'component':([0,1,],[3,7,]),'expression':([9,11,21,23,24,26,27,35,37,38,39,42,43,],[15,18,36,36,36,36,36,49,50,49,49,49,49,]),'program':([0,],[4,]),'expression_list':([9,],[11,]),'parameter_list':([21,23,24,26,27,],[35,38,39,42,43,]),'type':([33,],[47,]),'import_statement':([0,1,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
