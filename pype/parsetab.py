
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1728DD5C674C28D5C94CF9231A47147'
    
_lr_action_items = {'LPAREN':([0,2,4,6,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,55,57,58,],[1,-5,1,-4,13,-2,-3,-26,13,-9,-27,-28,-6,29,29,13,13,13,13,13,-8,-7,29,-11,-15,-17,29,-13,-30,13,13,-21,13,13,13,13,-10,-14,-12,-25,-29,-23,-20,-24,-22,-19,-16,]),'ID':([3,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[8,11,12,-26,23,12,-9,-27,-28,33,33,12,12,12,12,42,12,-8,44,33,-11,-15,-17,33,-13,-30,12,12,-21,12,12,12,12,-18,56,-10,-14,-12,-25,-29,-23,-20,-24,-22,-19,-16,]),'INPUT':([13,],[19,]),'OUTPUT':([13,],[20,]),'OP_DIV':([13,],[21,]),'RPAREN':([11,12,16,17,19,20,23,30,31,32,33,34,35,36,37,38,39,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-27,-28,31,35,39,46,-11,-15,-17,48,-13,-30,49,51,-21,52,53,55,-10,-14,-12,-25,-29,-23,-20,-24,57,-22,58,-19,-16,]),'$end':([2,4,5,6,9,10,18,28,],[-5,-1,0,-4,-2,-3,-6,-7,]),'OP_MUL':([13,],[24,]),'RBRACE':([12,14,15,16,17,27,31,35,39,46,48,49,51,52,53,55,57,],[-26,28,-9,-27,-28,-8,-11,-13,-21,-10,-12,-25,-23,-20,-24,-22,-19,]),'ASSIGN':([13,],[25,]),'IMPORT':([1,],[7,]),'LBRACE':([0,2,4,6,9,10,18,28,],[3,-5,3,-4,-2,-3,-6,-7,]),'OP_SUB':([13,],[22,]),'STRING':([8,12,14,15,16,17,21,22,23,24,26,27,31,35,36,37,38,39,40,41,42,43,46,48,49,50,51,52,53,55,57,],[17,-26,17,-9,-27,-28,17,17,17,17,17,-8,-11,-13,-30,17,17,-21,17,17,17,17,-10,-12,-25,-29,-23,-20,-24,-22,-19,]),'NUMBER':([8,12,14,15,16,17,21,22,23,24,26,27,31,35,36,37,38,39,40,41,42,43,46,48,49,50,51,52,53,55,57,],[16,-26,16,-9,-27,-28,16,16,16,16,16,-8,-11,-13,-30,16,16,-21,16,16,16,16,-10,-12,-25,-29,-23,-20,-24,-22,-19,]),'OP_ADD':([13,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([29,],[45,]),'component':([0,4,],[2,9,]),'declaration_list':([19,20,],[30,34,]),'parameter_list':([21,22,23,24,26,],[37,38,40,41,43,]),'declaration':([19,20,30,34,],[32,32,47,47,]),'expression_list':([8,],[14,]),'statement_list':([0,],[4,]),'program':([0,],[5,]),'import_statement':([0,4,],[6,10,]),'expression':([8,14,21,22,23,24,26,37,38,40,41,42,43,],[15,27,36,36,36,36,36,50,50,50,50,54,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
