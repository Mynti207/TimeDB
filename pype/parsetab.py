
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1728DD5C674C28D5C94CF9231A47147'
    
_lr_action_items = {'NUMBER':([7,11,12,14,15,16,18,20,21,22,25,27,29,30,31,32,33,35,39,41,42,43,44,45,46,47,48,52,53,55,57,],[11,-27,11,-9,-26,-28,-8,11,11,11,11,11,11,-30,11,-21,11,-11,-13,11,11,11,-25,-29,-20,-23,-10,-12,-24,-22,-19,]),'OP_DIV':([13,],[20,]),'OP_SUB':([13,],[22,]),'RPAREN':([11,15,16,17,21,23,24,29,30,31,32,33,34,35,36,38,39,40,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[-27,-26,-28,28,32,35,39,44,-30,46,-21,47,-17,-11,48,-15,-13,52,53,55,-25,-29,-20,-23,-10,-14,-12,-24,57,-22,58,-19,-16,]),'LBRACE':([0,3,4,6,8,9,19,28,],[1,1,-5,-4,-2,-3,-7,-6,]),'OUTPUT':([13,],[24,]),'INPUT':([13,],[23,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[7,15,17,-27,15,21,-9,-26,-28,-8,15,15,15,34,34,15,42,15,15,-30,15,-21,15,-17,-11,34,51,-15,-13,34,15,15,15,-25,-29,-20,-23,-10,-14,56,-18,-12,-24,-22,-19,-16,]),'IMPORT':([5,],[10,]),'OP_MUL':([13,],[25,]),'$end':([2,3,4,6,8,9,19,28,],[0,-1,-5,-4,-2,-3,-7,-6,]),'RBRACE':([11,12,14,15,16,18,32,35,39,44,46,47,48,52,53,55,57,],[-27,19,-9,-26,-28,-8,-21,-11,-13,-25,-20,-23,-10,-12,-24,-22,-19,]),'ASSIGN':([13,],[26,]),'LPAREN':([0,3,4,6,7,8,9,11,12,14,15,16,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,52,53,55,57,58,],[5,5,-5,-4,13,-2,-3,-27,13,-9,-26,-28,-8,-7,13,13,13,37,37,13,13,-6,13,-30,13,-21,13,-17,-11,37,-15,-13,37,13,13,13,-25,-29,-20,-23,-10,-14,-12,-24,-22,-19,-16,]),'OP_ADD':([13,],[27,]),'STRING':([7,11,12,14,15,16,18,20,21,22,25,27,29,30,31,32,33,35,39,41,42,43,44,45,46,47,48,52,53,55,57,],[16,-27,16,-9,-26,-28,-8,16,16,16,16,16,16,-30,16,-21,16,-11,-13,16,16,16,-25,-29,-20,-23,-10,-12,-24,-22,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([20,21,22,25,27,],[29,31,33,41,43,]),'expression':([7,12,20,21,22,25,27,29,31,33,41,42,43,],[14,18,30,30,30,30,30,45,45,45,45,54,45,]),'program':([0,],[2,]),'expression_list':([7,],[12,]),'statement_list':([0,],[3,]),'type':([37,],[50,]),'component':([0,3,],[4,8,]),'declaration_list':([23,24,],[36,40,]),'import_statement':([0,3,],[6,9,]),'declaration':([23,24,36,40,],[38,38,49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
