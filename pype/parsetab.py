
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1728DD5C674C28D5C94CF9231A47147'
    
_lr_action_items = {'ID':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[8,11,12,-26,-9,-28,-27,19,12,12,12,37,12,12,37,42,12,-8,-21,12,-30,12,47,-11,37,-15,-17,12,12,-13,37,12,12,-20,-29,-23,-18,56,-10,-14,-22,-24,-12,-25,-19,-16,]),'RPAREN':([11,12,14,15,19,21,24,29,30,31,32,34,35,36,37,38,39,40,41,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,29,34,40,-21,44,-30,46,-11,49,-15,-17,51,52,-13,53,55,-20,-29,-23,-10,-14,-22,-24,-12,57,-25,58,-19,-16,]),'OP_MUL':([16,],[23,]),'OP_SUB':([16,],[20,]),'INPUT':([16,],[21,]),'STRING':([8,12,13,14,15,17,19,20,22,23,26,27,29,30,31,32,34,38,39,40,42,43,44,45,46,49,51,52,53,55,57,],[14,-26,-9,-28,-27,14,14,14,14,14,14,-8,-21,14,-30,14,-11,14,14,-13,14,14,-20,-29,-23,-10,-22,-24,-12,-25,-19,]),'RBRACE':([12,13,14,15,17,27,29,34,40,44,46,49,51,52,53,55,57,],[-26,-9,-28,-27,28,-8,-21,-11,-13,-20,-23,-10,-22,-24,-12,-25,-19,]),'$end':([3,4,5,6,9,10,18,28,],[-4,0,-1,-5,-2,-3,-6,-7,]),'OP_ADD':([16,],[22,]),'IMPORT':([1,],[7,]),'LPAREN':([0,3,5,6,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,55,57,58,],[1,-4,1,-5,16,-2,-3,-26,-9,-28,-27,16,-6,16,16,33,16,16,33,16,-8,-7,-21,16,-30,16,-11,33,-15,-17,16,16,-13,33,16,16,-20,-29,-23,-10,-14,-22,-24,-12,-25,-19,-16,]),'ASSIGN':([16,],[25,]),'LBRACE':([0,3,5,6,9,10,18,28,],[2,-4,2,-5,-2,-3,-6,-7,]),'NUMBER':([8,12,13,14,15,17,19,20,22,23,26,27,29,30,31,32,34,38,39,40,42,43,44,45,46,49,51,52,53,55,57,],[15,-26,-9,-28,-27,15,15,15,15,15,15,-8,-21,15,-30,15,-11,15,15,-13,15,15,-20,-29,-23,-10,-22,-24,-12,-25,-19,]),'OUTPUT':([16,],[24,]),'OP_DIV':([16,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([8,17,19,20,22,23,26,30,32,38,39,42,43,],[13,27,31,31,31,31,31,45,45,45,45,54,45,]),'parameter_list':([19,20,22,23,26,],[30,32,38,39,43,]),'declaration_list':([21,24,],[35,41,]),'type':([33,],[48,]),'import_statement':([0,5,],[3,10,]),'program':([0,],[4,]),'statement_list':([0,],[5,]),'component':([0,5,],[6,9,]),'declaration':([21,24,35,41,],[36,36,50,50,]),'expression_list':([8,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
