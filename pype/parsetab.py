
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1728DD5C674C28D5C94CF9231A47147'
    
_lr_action_items = {'ASSIGN':([12,],[19,]),'OP_ADD':([12,],[20,]),'OP_MUL':([12,],[21,]),'LPAREN':([0,2,3,6,8,9,10,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,45,46,47,48,49,50,53,54,55,56,58,],[1,-4,1,-5,-3,-2,12,-9,-28,12,-27,-26,-6,12,12,12,37,12,12,37,-8,-7,12,-30,12,12,12,-15,-13,37,-17,12,-21,12,-11,37,-22,-29,-24,-23,-14,-12,-25,-20,-10,-19,-16,]),'STRING':([10,13,14,15,16,17,20,21,22,24,25,27,29,30,31,32,33,35,39,40,41,42,45,46,47,48,50,53,54,55,56,],[14,-9,-28,14,-27,-26,14,14,14,14,14,-8,14,-30,14,14,14,-13,14,-21,14,-11,-22,-29,-24,-23,-12,-25,-20,-10,-19,]),'OP_SUB':([12,],[22,]),'LBRACE':([0,2,3,6,8,9,18,28,],[5,-4,5,-5,-3,-2,-6,-7,]),'$end':([2,3,4,6,8,9,18,28,],[-4,-1,0,-5,-3,-2,-6,-7,]),'RBRACE':([13,14,15,16,17,27,35,40,42,45,47,48,50,53,54,55,56,],[-9,-28,28,-27,-26,-8,-13,-21,-11,-22,-24,-23,-12,-25,-20,-10,-19,]),'IMPORT':([1,],[7,]),'OUTPUT':([12,],[23,]),'NUMBER':([10,13,14,15,16,17,20,21,22,24,25,27,29,30,31,32,33,35,39,40,41,42,45,46,47,48,50,53,54,55,56,],[16,-9,-28,16,-27,-26,16,16,16,16,16,-8,16,-30,16,16,16,-13,16,-21,16,-11,-22,-29,-24,-23,-12,-25,-20,-10,-19,]),'INPUT':([12,],[26,]),'OP_DIV':([12,],[24,]),'ID':([5,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[10,11,17,25,-9,-28,17,-27,-26,29,17,17,17,38,17,17,38,-8,17,-30,17,17,17,-15,-13,38,52,-17,17,-21,17,-11,38,-22,-29,-24,-23,-14,-12,57,-18,-25,-20,-10,-19,-16,]),'RPAREN':([11,14,16,17,23,25,26,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-28,-27,-26,35,40,42,-30,45,47,48,-15,-13,50,-17,53,-21,54,-11,55,56,-22,-29,-24,-23,-14,-12,-25,-20,-10,-19,58,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([23,26,],[36,43,]),'expression':([10,15,20,21,22,24,25,29,31,32,33,39,41,],[13,27,30,30,30,30,30,44,46,46,46,46,46,]),'declaration':([23,26,36,43,],[34,34,49,49,]),'expression_list':([10,],[15,]),'import_statement':([0,3,],[2,8,]),'statement_list':([0,],[3,]),'program':([0,],[4,]),'type':([37,],[51,]),'parameter_list':([20,21,22,24,25,],[31,32,33,39,41,]),'component':([0,3,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
