
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6A65CD8BFBEB79DCE9C7C577BDAF4664'
    
_lr_action_items = {'INPUT':([14,],[18,]),'IMPORT':([5,],[10,]),'ASSIGN':([14,],[20,]),'OUTPUT':([14,],[21,]),'RBRACE':([11,12,13,15,16,27,33,38,43,47,48,51,52,53,54,55,57,],[-26,-28,-9,-27,26,-8,-11,-13,-21,-10,-23,-12,-24,-22,-25,-20,-19,]),'OP_SUB':([14,],[19,]),'OP_MUL':([14,],[22,]),'$end':([1,3,4,6,7,8,26,28,],[-1,-5,-4,0,-2,-3,-7,-6,]),'RPAREN':([11,12,15,17,18,21,25,29,31,32,33,34,35,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-26,-28,-27,28,33,38,43,-15,47,-17,-11,48,-30,51,-13,52,53,54,55,-21,-14,-10,-23,-29,57,-12,-24,-22,-25,-20,58,-19,-16,]),'LBRACE':([0,1,3,4,7,8,26,28,],[2,2,-5,-4,-2,-3,-7,-6,]),'OP_ADD':([14,],[23,]),'LPAREN':([0,1,3,4,7,8,9,11,12,13,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,51,52,53,54,55,57,58,],[5,5,-5,-4,-2,-3,14,-26,-28,-9,-27,14,30,14,30,14,14,14,14,-7,-8,-6,-15,30,-17,-11,14,-30,14,30,-13,14,14,14,14,-21,-14,-10,-23,-29,-12,-24,-22,-25,-20,-19,-16,]),'NUMBER':([9,11,12,13,15,16,19,22,23,24,25,27,33,34,35,36,38,39,40,41,42,43,47,48,49,51,52,53,54,55,57,],[15,-26,-28,-9,-27,15,15,15,15,15,15,-8,-11,15,-30,15,-13,15,15,15,15,-21,-10,-23,-29,-12,-24,-22,-25,-20,-19,]),'STRING':([9,11,12,13,15,16,19,22,23,24,25,27,33,34,35,36,38,39,40,41,42,43,47,48,49,51,52,53,54,55,57,],[12,-26,-28,-9,-27,12,12,12,12,12,12,-8,-11,12,-30,12,-13,12,12,12,12,-21,-10,-23,-29,-12,-24,-22,-25,-20,-19,]),'OP_DIV':([14,],[24,]),'ID':([2,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[9,11,17,-26,-28,-9,25,-27,11,32,11,36,32,11,11,11,11,-8,-15,45,32,-17,-11,11,-30,11,32,-13,11,11,11,11,-21,56,-18,-14,-10,-23,-29,-12,-24,-22,-25,-20,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'declaration_list':([18,21,],[31,37,]),'component':([0,1,],[3,7,]),'expression':([9,16,19,22,23,24,25,34,36,39,40,41,42,],[13,27,35,35,35,35,35,49,50,49,49,49,49,]),'import_statement':([0,1,],[4,8,]),'program':([0,],[6,]),'expression_list':([9,],[16,]),'declaration':([18,21,31,37,],[29,29,46,46,]),'type':([30,],[44,]),'parameter_list':([19,22,23,24,25,],[34,39,40,41,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
