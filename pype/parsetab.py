
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1728DD5C674C28D5C94CF9231A47147'
    
_lr_action_items = {'LPAREN':([0,1,3,5,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,52,53,54,55,57,58,],[2,-5,-4,2,-2,-3,13,13,-27,-26,-9,-28,-6,-7,-8,13,32,13,13,32,13,13,13,-30,32,-17,-11,-15,13,13,13,32,-13,-21,13,13,-24,-29,-10,-14,-22,-25,-12,-20,-23,-19,-16,]),'OP_MUL':([13,],[21,]),'IMPORT':([2,],[7,]),'INPUT':([13,],[22,]),'STRING':([10,12,14,15,16,17,20,21,23,25,27,28,29,30,34,36,37,38,40,41,42,43,44,45,46,50,52,53,54,55,57,],[17,17,-27,-26,-9,-28,-8,17,17,17,17,17,17,-30,-11,17,17,17,-13,-21,17,17,-24,-29,-10,-22,-25,-12,-20,-23,-19,]),'$end':([1,3,4,5,8,9,18,19,],[-5,-4,0,-1,-2,-3,-6,-7,]),'RPAREN':([11,14,15,17,22,26,27,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,34,40,41,44,-30,46,-17,-11,-15,50,52,53,-13,-21,54,55,-24,-29,-10,-14,-22,57,-25,-12,-20,-23,58,-19,-16,]),'RBRACE':([12,14,15,16,17,20,34,40,41,44,46,50,52,53,54,55,57,],[19,-27,-26,-9,-28,-8,-11,-13,-21,-24,-10,-22,-25,-12,-20,-23,-19,]),'LBRACE':([0,1,3,5,8,9,18,19,],[6,-5,-4,6,-2,-3,-6,-7,]),'NUMBER':([10,12,14,15,16,17,20,21,23,25,27,28,29,30,34,36,37,38,40,41,42,43,44,45,46,50,52,53,54,55,57,],[14,14,-27,-26,-9,-28,-8,14,14,14,14,14,14,-30,-11,14,14,14,-13,-21,14,14,-24,-29,-10,-22,-25,-12,-20,-23,-19,]),'OP_DIV':([13,],[25,]),'OUTPUT':([13,],[26,]),'OP_ADD':([13,],[23,]),'ID':([6,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[10,11,15,15,27,-27,-26,-9,-28,-8,15,33,15,37,15,33,15,15,15,-30,33,49,-17,-11,-15,15,15,15,33,-13,-21,15,15,-24,-29,-10,-14,56,-18,-22,-25,-12,-20,-23,-19,-16,]),'OP_SUB':([13,],[28,]),'ASSIGN':([13,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,5,],[1,8,]),'expression_list':([10,],[12,]),'expression':([10,12,21,23,25,27,28,29,36,37,38,42,43,],[16,20,30,30,30,30,30,45,45,51,45,45,45,]),'type':([32,],[48,]),'import_statement':([0,5,],[3,9,]),'declaration':([22,26,31,39,],[35,35,47,47,]),'program':([0,],[4,]),'statement_list':([0,],[5,]),'declaration_list':([22,26,],[31,39,]),'parameter_list':([21,23,25,27,28,],[29,36,38,42,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
