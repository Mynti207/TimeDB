
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1728DD5C674C28D5C94CF9231A47147'
    
_lr_action_items = {'OUTPUT':([14,],[18,]),'OP_DIV':([14,],[19,]),'NUMBER':([9,11,12,13,15,16,19,20,21,23,25,26,32,34,35,36,37,38,39,40,42,43,45,48,49,50,51,53,54,55,57,],[12,-9,-27,-26,-28,12,12,12,12,12,12,-8,-13,-30,12,12,12,-21,12,12,-11,12,-12,-29,-25,-23,-20,-24,-10,-22,-19,]),'INPUT':([14,],[24,]),'ID':([3,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[9,13,17,-9,-27,-26,21,-28,13,29,13,13,13,39,13,29,13,-8,-17,-15,29,-13,46,-30,13,13,13,-21,13,13,29,-11,13,-14,-12,-18,56,-29,-25,-23,-20,-24,-10,-22,-19,-16,]),'OP_SUB':([14,],[20,]),'LPAREN':([0,1,4,5,7,8,9,11,12,13,15,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,54,55,57,58,],[6,6,-4,-5,-3,-2,14,-9,-27,-26,-28,14,33,14,14,14,14,33,14,-8,-7,-6,-17,-15,33,-13,-30,14,14,14,-21,14,14,33,-11,14,-14,-12,-29,-25,-23,-20,-24,-10,-22,-19,-16,]),'ASSIGN':([14,],[22,]),'STRING':([9,11,12,13,15,16,19,20,21,23,25,26,32,34,35,36,37,38,39,40,42,43,45,48,49,50,51,53,54,55,57,],[15,-9,-27,-26,-28,15,15,15,15,15,15,-8,-13,-30,15,15,15,-21,15,15,-11,15,-12,-29,-25,-23,-20,-24,-10,-22,-19,]),'IMPORT':([6,],[10,]),'OP_ADD':([14,],[25,]),'LBRACE':([0,1,4,5,7,8,27,28,],[3,3,-4,-5,-3,-2,-7,-6,]),'$end':([1,2,4,5,7,8,27,28,],[-1,0,-4,-5,-3,-2,-7,-6,]),'RBRACE':([11,12,13,15,16,26,32,38,42,45,49,50,51,53,54,55,57,],[-9,-27,-26,-28,27,-8,-13,-21,-11,-12,-25,-23,-20,-24,-10,-22,-19,]),'OP_MUL':([14,],[23,]),'RPAREN':([12,13,15,17,18,21,24,29,30,31,32,34,35,36,37,38,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,32,38,42,-17,-15,45,-13,-30,49,50,51,-21,53,54,-11,55,-14,-12,-29,-25,-23,-20,57,-24,-10,-22,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'expression':([9,16,19,20,21,23,25,35,36,37,39,40,43,],[11,26,34,34,34,34,34,48,48,48,52,48,48,]),'program':([0,],[2,]),'type':([33,],[47,]),'declaration':([18,24,31,41,],[30,30,44,44,]),'expression_list':([9,],[16,]),'declaration_list':([18,24,],[31,41,]),'import_statement':([0,1,],[4,7,]),'parameter_list':([19,20,21,23,25,],[35,36,37,40,43,]),'component':([0,1,],[5,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
