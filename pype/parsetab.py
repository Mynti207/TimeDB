
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '76A07D5CF52EC961ECD9BD05F62E0AC8'
    
_lr_action_items = {'IMPORT':([3,],[7,]),'RPAREN':([11,13,15,17,21,22,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,31,34,43,45,-15,-11,-17,-21,-30,48,50,51,52,54,55,-13,-14,-10,-20,-29,-24,-25,-22,57,-23,-12,58,-19,-16,]),'RBRACE':([12,13,15,16,17,19,31,34,43,45,48,50,51,52,54,55,57,],[20,-28,-27,-9,-26,-8,-11,-21,-13,-10,-20,-24,-25,-22,-23,-12,-19,]),'INPUT':([14,],[21,]),'STRING':([10,12,13,15,16,17,19,22,23,24,25,27,31,34,35,36,37,38,39,40,41,43,45,48,49,50,51,52,54,55,57,],[13,13,-28,-27,-9,-26,-8,13,13,13,13,13,-11,-21,-30,13,13,13,13,13,13,-13,-10,-20,-29,-24,-25,-22,-23,-12,-19,]),'LBRACE':([0,1,4,6,8,9,18,20,],[5,-4,5,-5,-3,-2,-6,-7,]),'OP_SUB':([14,],[27,]),'OP_MUL':([14,],[23,]),'NUMBER':([10,12,13,15,16,17,19,22,23,24,25,27,31,34,35,36,37,38,39,40,41,43,45,48,49,50,51,52,54,55,57,],[15,15,-28,-27,-9,-26,-8,15,15,15,15,15,-11,-21,-30,15,15,15,15,15,15,-13,-10,-20,-29,-24,-25,-22,-23,-12,-19,]),'LPAREN':([0,1,4,6,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,54,55,57,58,],[3,-4,3,-5,-3,-2,14,14,-28,-27,-9,-26,-6,-8,-7,32,14,14,14,14,14,32,32,-15,-11,-17,-21,-30,14,14,14,14,14,14,32,-13,-14,-10,-20,-29,-24,-25,-22,-23,-12,-19,-16,]),'OP_DIV':([14,],[24,]),'OP_ADD':([14,],[25,]),'$end':([1,2,4,6,8,9,18,20,],[-4,0,-1,-5,-3,-2,-6,-7,]),'ASSIGN':([14,],[26,]),'ID':([5,7,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[10,11,17,17,-28,22,-27,-9,-26,-8,33,17,17,17,17,40,17,33,33,-15,-11,47,-17,-21,-30,17,17,17,17,17,17,33,-13,-14,-10,56,-18,-20,-29,-24,-25,-22,-23,-12,-19,-16,]),'OUTPUT':([14,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,4,],[1,8,]),'declaration_list':([21,28,],[29,42,]),'program':([0,],[2,]),'expression_list':([10,],[12,]),'type':([32,],[46,]),'statement_list':([0,],[4,]),'parameter_list':([22,23,24,25,27,],[36,37,38,39,41,]),'declaration':([21,28,29,42,],[30,30,44,44,]),'expression':([10,12,22,23,24,25,27,36,37,38,39,40,41,],[16,19,35,35,35,35,35,49,49,49,49,53,49,]),'component':([0,4,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
