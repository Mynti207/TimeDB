
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '76A07D5CF52EC961ECD9BD05F62E0AC8'
    
_lr_action_items = {'ASSIGN':([14,],[21,]),'LBRACE':([0,1,2,4,7,8,18,19,],[5,-5,5,-4,-2,-3,-6,-7,]),'NUMBER':([10,12,13,15,16,17,20,23,24,25,27,28,29,34,35,36,37,38,39,41,42,43,48,49,50,51,52,53,54,55,56,],[13,13,-27,-26,-9,-28,-8,13,13,13,13,13,13,-13,13,-30,13,-21,13,-11,13,13,-12,-25,-29,-20,-23,-10,-22,-24,-19,]),'LPAREN':([0,1,2,4,7,8,10,12,13,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,56,58,],[3,-5,3,-4,-2,-3,14,14,-27,-26,-9,-28,-6,-7,-8,31,14,14,14,31,14,14,14,-15,31,-17,-13,14,-30,14,-21,14,31,-11,14,14,-14,-12,-25,-29,-20,-23,-10,-22,-24,-19,-16,]),'RBRACE':([12,13,15,16,17,20,34,38,41,48,49,51,52,53,54,55,56,],[19,-27,-26,-9,-28,-8,-13,-21,-11,-12,-25,-20,-23,-10,-22,-24,-19,]),'OUTPUT':([14,],[22,]),'OP_DIV':([14,],[23,]),'ID':([5,9,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[10,11,15,15,-27,24,-26,-9,-28,-8,29,33,15,15,15,33,15,15,15,-15,46,33,-17,-13,15,-30,15,-21,15,33,-11,15,15,57,-18,-14,-12,-25,-29,-20,-23,-10,-22,-24,-19,-16,]),'RPAREN':([11,13,15,17,22,24,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,34,38,41,-15,48,-17,-13,49,-30,51,-21,52,53,-11,54,55,56,-14,-12,-25,-29,-20,-23,-10,-22,-24,-19,58,-16,]),'STRING':([10,12,13,15,16,17,20,23,24,25,27,28,29,34,35,36,37,38,39,41,42,43,48,49,50,51,52,53,54,55,56,],[17,17,-27,-26,-9,-28,-8,17,17,17,17,17,17,-13,17,-30,17,-21,17,-11,17,17,-12,-25,-29,-20,-23,-10,-22,-24,-19,]),'INPUT':([14,],[26,]),'OP_SUB':([14,],[25,]),'$end':([1,2,4,6,7,8,18,19,],[-5,-1,-4,0,-2,-3,-6,-7,]),'OP_ADD':([14,],[27,]),'IMPORT':([3,],[9,]),'OP_MUL':([14,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,2,],[1,7,]),'expression_list':([10,],[12,]),'statement_list':([0,],[2,]),'expression':([10,12,23,24,25,27,28,29,35,37,39,42,43,],[16,20,36,36,36,36,36,44,50,50,50,50,50,]),'declaration':([22,26,32,40,],[30,30,47,47,]),'parameter_list':([23,24,25,27,28,],[35,37,39,42,43,]),'import_statement':([0,2,],[4,8,]),'declaration_list':([22,26,],[32,40,]),'program':([0,],[6,]),'type':([31,],[45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
