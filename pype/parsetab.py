
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D0986CF548090149FF07FC136CB2C82'
    
_lr_action_items = {'OP_MUL':([14,],[21,]),'$end':([2,3,5,6,9,10,18,19,],[0,-5,-4,-1,-2,-3,-6,-7,]),'LPAREN':([0,3,5,6,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[1,-5,-4,1,14,-2,-3,14,-27,-26,-28,-9,-6,-7,-8,14,31,14,14,14,14,31,14,-30,-17,-11,31,-15,14,14,14,14,-21,14,-13,31,-29,-24,-10,-14,-23,-22,-25,-20,-12,-19,-16,]),'OP_SUB':([14,],[23,]),'INPUT':([14,],[22,]),'LBRACE':([0,3,5,6,9,10,18,19,],[4,-5,-4,4,-2,-3,-6,-7,]),'OP_ADD':([14,],[24,]),'STRING':([8,12,13,15,16,17,20,21,23,24,25,26,29,30,33,36,37,38,39,40,41,42,44,45,48,50,51,52,53,55,57,],[16,16,-27,-26,-28,-9,-8,16,16,16,16,16,16,-30,-11,16,16,16,16,-21,16,-13,-29,-24,-10,-23,-22,-25,-20,-12,-19,]),'OP_DIV':([14,],[25,]),'RBRACE':([12,13,15,16,17,20,33,40,42,45,48,50,51,52,53,55,57,],[19,-27,-26,-28,-9,-8,-11,-21,-13,-24,-10,-23,-22,-25,-20,-12,-19,]),'IMPORT':([1,],[7,]),'NUMBER':([8,12,13,15,16,17,20,21,23,24,25,26,29,30,33,36,37,38,39,40,41,42,44,45,48,50,51,52,53,55,57,],[13,13,-27,-26,-28,-9,-8,13,13,13,13,13,13,-30,-11,13,13,13,13,-21,13,-13,-29,-24,-10,-23,-22,-25,-20,-12,-19,]),'ID':([4,7,8,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[8,11,15,15,-27,26,-26,-28,-9,-8,15,32,15,15,15,15,41,32,15,-30,46,-17,-11,32,-15,15,15,15,15,-21,15,-13,32,-29,-24,-18,56,-10,-14,-23,-22,-25,-20,-12,-19,-16,]),'OUTPUT':([14,],[28,]),'RPAREN':([11,13,15,16,22,26,28,29,30,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,33,40,42,45,-30,-17,-11,48,-15,50,51,52,53,-21,-13,55,-29,-24,-10,-14,-23,-22,-25,-20,57,-12,58,-19,-16,]),'ASSIGN':([14,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([8,],[12,]),'type':([31,],[47,]),'program':([0,],[2,]),'component':([0,6,],[3,9,]),'parameter_list':([21,23,24,25,26,],[29,36,37,38,39,]),'import_statement':([0,6,],[5,10,]),'statement_list':([0,],[6,]),'expression':([8,12,21,23,24,25,26,29,36,37,38,39,41,],[17,20,30,30,30,30,30,44,44,44,44,44,54,]),'declaration_list':([22,28,],[34,43,]),'declaration':([22,28,34,43,],[35,35,49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
