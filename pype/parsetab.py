
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D0986CF548090149FF07FC136CB2C82'
    
_lr_action_items = {'INPUT':([13,],[20,]),'ASSIGN':([13,],[25,]),'RBRACE':([12,14,15,16,17,28,35,37,41,45,49,50,51,52,53,55,57,],[-26,27,-27,-28,-9,-8,-11,-21,-13,-25,-10,-20,-24,-23,-12,-22,-19,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[10,11,12,-26,21,12,-27,-28,-9,12,31,12,12,12,31,42,12,-8,12,-30,-17,47,-15,31,-11,12,-21,12,12,31,-13,12,12,-29,-25,56,-18,-14,-10,-20,-24,-23,-12,-22,-19,-16,]),'LPAREN':([0,1,2,5,7,8,10,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[3,3,-5,-4,-2,-3,13,-26,13,-27,-28,-9,-6,13,32,13,13,13,32,13,-7,-8,13,-30,-17,-15,32,-11,13,-21,13,13,32,-13,13,13,-29,-25,-14,-10,-20,-24,-23,-12,-22,-19,-16,]),'$end':([1,2,4,5,7,8,18,27,],[-1,-5,0,-4,-2,-3,-6,-7,]),'OP_MUL':([13,],[22,]),'IMPORT':([3,],[9,]),'STRING':([10,12,14,15,16,17,19,21,22,23,26,28,29,30,35,36,37,38,39,41,42,43,44,45,49,50,51,52,53,55,57,],[16,-26,16,-27,-28,-9,16,16,16,16,16,-8,16,-30,-11,16,-21,16,16,-13,16,16,-29,-25,-10,-20,-24,-23,-12,-22,-19,]),'NUMBER':([10,12,14,15,16,17,19,21,22,23,26,28,29,30,35,36,37,38,39,41,42,43,44,45,49,50,51,52,53,55,57,],[15,-26,15,-27,-28,-9,15,15,15,15,15,-8,15,-30,-11,15,-21,15,15,-13,15,15,-29,-25,-10,-20,-24,-23,-12,-22,-19,]),'OP_SUB':([13,],[23,]),'OUTPUT':([13,],[24,]),'OP_ADD':([13,],[26,]),'LBRACE':([0,1,2,5,7,8,18,27,],[6,6,-5,-4,-2,-3,-6,-7,]),'RPAREN':([11,12,15,16,20,21,24,29,30,31,33,34,35,36,37,38,39,40,41,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-27,-28,35,37,41,45,-30,-17,-15,49,-11,50,-21,51,52,53,-13,55,-29,-25,-14,-10,-20,-24,-23,-12,57,-22,58,-19,-16,]),'OP_DIV':([13,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'type':([32,],[46,]),'component':([0,1,],[2,7,]),'expression_list':([10,],[14,]),'parameter_list':([19,21,22,23,26,],[29,36,38,39,43,]),'program':([0,],[4,]),'declaration_list':([20,24,],[34,40,]),'declaration':([20,24,34,40,],[33,33,48,48,]),'import_statement':([0,1,],[5,8,]),'expression':([10,14,19,21,22,23,26,29,36,38,39,42,43,],[17,28,30,30,30,30,30,44,44,44,44,54,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
