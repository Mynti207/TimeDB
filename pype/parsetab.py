
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '674B03BF23F0780B988AC9F0B7D3EDAD'
    
_lr_action_items = {'LPAREN':([0,2,3,4,8,9,10,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,52,53,54,55,57,58,],[1,1,-4,-5,-3,-2,12,-9,-26,-28,-27,12,-6,12,32,12,12,12,32,12,-8,-7,-21,-30,12,32,-13,-15,-17,12,12,12,12,32,-11,12,-20,-29,-12,-14,-23,-24,-25,-10,-22,-19,-16,]),'OP_SUB':([12,],[22,]),'RPAREN':([11,14,15,16,19,20,25,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,29,34,42,-21,-30,44,48,-13,-15,-17,51,52,53,54,-11,55,-20,-29,-12,-14,57,-23,-24,-25,-10,-22,58,-19,-16,]),'LBRACE':([0,2,3,4,8,9,18,28,],[5,5,-4,-5,-3,-2,-6,-7,]),'ID':([5,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[10,11,14,19,-9,-26,-28,-27,14,14,36,37,14,14,14,36,14,-8,-21,-30,14,46,36,-13,-15,-17,14,14,14,14,36,-11,14,-20,-29,-18,56,-12,-14,-23,-24,-25,-10,-22,-19,-16,]),'OUTPUT':([12,],[20,]),'ASSIGN':([12,],[21,]),'STRING':([10,13,14,15,16,17,19,22,23,24,26,27,29,30,31,34,37,38,39,40,42,43,44,45,48,51,52,53,54,55,57,],[15,-9,-26,-28,-27,15,15,15,15,15,15,-8,-21,-30,15,-13,15,15,15,15,-11,15,-20,-29,-12,-23,-24,-25,-10,-22,-19,]),'NUMBER':([10,13,14,15,16,17,19,22,23,24,26,27,29,30,31,34,37,38,39,40,42,43,44,45,48,51,52,53,54,55,57,],[16,-9,-26,-28,-27,16,16,16,16,16,16,-8,-21,-30,16,-13,16,16,16,16,-11,16,-20,-29,-12,-23,-24,-25,-10,-22,-19,]),'OP_MUL':([12,],[23,]),'$end':([2,3,4,6,8,9,18,28,],[-1,-4,-5,0,-3,-2,-6,-7,]),'IMPORT':([1,],[7,]),'RBRACE':([13,14,15,16,17,27,29,34,42,44,48,51,52,53,54,55,57,],[-9,-26,-28,-27,28,-8,-21,-13,-11,-20,-12,-23,-24,-25,-10,-22,-19,]),'INPUT':([12,],[25,]),'OP_ADD':([12,],[26,]),'OP_DIV':([12,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([10,],[17,]),'expression':([10,17,19,22,23,24,26,31,37,38,39,40,43,],[13,27,30,30,30,30,30,45,50,45,45,45,45,]),'declaration_list':([20,25,],[33,41,]),'type':([32,],[47,]),'statement_list':([0,],[2,]),'import_statement':([0,2,],[3,8,]),'component':([0,2,],[4,9,]),'declaration':([20,25,33,41,],[35,35,49,49,]),'parameter_list':([19,22,23,24,26,],[31,38,39,40,43,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
