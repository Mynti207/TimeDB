
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7B77CFC2E9574BE6AA62E56690011F66'
    
_lr_action_items = {'NUMBER':([7,11,12,13,15,16,19,20,22,23,25,26,29,34,35,36,37,38,39,40,42,43,44,48,49,50,52,53,54,55,57,],[11,-27,-9,-26,-28,11,11,11,11,11,11,-8,-13,-30,11,11,11,11,11,-11,11,-21,-12,-29,-22,-23,-24,-25,-10,-20,-19,]),'IMPORT':([5,],[10,]),'$end':([2,3,4,6,8,9,27,28,],[0,-4,-1,-5,-3,-2,-7,-6,]),'ID':([1,7,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[7,13,17,-27,-9,-26,25,-28,13,33,13,13,37,13,13,33,13,-8,-13,-15,33,47,-17,-30,13,13,13,13,13,-11,33,13,-21,-12,-14,56,-18,-29,-22,-23,-24,-25,-10,-20,-19,-16,]),'OUTPUT':([14,],[18,]),'OP_ADD':([14,],[19,]),'STRING':([7,11,12,13,15,16,19,20,22,23,25,26,29,34,35,36,37,38,39,40,42,43,44,48,49,50,52,53,54,55,57,],[15,-27,-9,-26,-28,15,15,15,15,15,15,-8,-13,-30,15,15,15,15,15,-11,15,-21,-12,-29,-22,-23,-24,-25,-10,-20,-19,]),'LPAREN':([0,3,4,6,7,8,9,11,12,13,15,16,18,19,20,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,52,53,54,55,57,58,],[5,-4,5,-5,14,-3,-2,-27,-9,-26,-28,14,32,14,14,14,14,32,14,-8,-7,-6,-13,-15,32,-17,-30,14,14,14,14,14,-11,32,14,-21,-12,-14,-29,-22,-23,-24,-25,-10,-20,-19,-16,]),'RBRACE':([11,12,13,15,16,26,29,40,43,44,49,50,52,53,54,55,57,],[-27,-9,-26,-28,27,-8,-13,-11,-21,-12,-22,-23,-24,-25,-10,-20,-19,]),'OP_SUB':([14,],[20,]),'ASSIGN':([14,],[21,]),'RPAREN':([11,13,15,17,18,24,25,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,29,40,43,-13,-15,44,-17,-30,49,50,52,53,-11,54,55,-21,-12,-14,-29,-22,-23,57,-24,-25,-10,-20,58,-19,-16,]),'INPUT':([14,],[24,]),'OP_DIV':([14,],[23,]),'OP_MUL':([14,],[22,]),'LBRACE':([0,3,4,6,8,9,27,28,],[1,-4,1,-5,-3,-2,-7,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([32,],[46,]),'expression':([7,16,19,20,22,23,25,35,36,37,38,39,42,],[12,26,34,34,34,34,34,48,48,51,48,48,48,]),'expression_list':([7,],[16,]),'program':([0,],[2,]),'parameter_list':([19,20,22,23,25,],[35,36,38,39,42,]),'import_statement':([0,4,],[3,8,]),'declaration':([18,24,31,41,],[30,30,45,45,]),'declaration_list':([18,24,],[31,41,]),'statement_list':([0,],[4,]),'component':([0,4,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',118),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',125),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',132),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',139),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',150),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',155),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',160),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',161),
]
),
]
