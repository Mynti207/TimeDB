
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D0986CF548090149FF07FC136CB2C82'
    
_lr_action_items = {'$end':([2,3,5,6,8,9,18,19,],[-1,0,-4,-5,-3,-2,-6,-7,]),'LBRACE':([0,2,5,6,8,9,18,19,],[4,4,-4,-5,-3,-2,-6,-7,]),'RBRACE':([12,13,15,16,17,20,33,35,39,47,49,50,51,52,53,54,57,],[-27,19,-9,-28,-26,-8,-11,-21,-13,-10,-20,-25,-12,-23,-22,-24,-19,]),'LPAREN':([0,2,5,6,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[1,1,-4,-5,-3,-2,14,-27,14,-9,-28,-26,-6,-7,-8,29,14,14,29,14,14,14,-15,-17,29,-11,-30,-21,14,14,29,-13,14,14,14,14,-14,-10,-29,-20,-25,-12,-23,-22,-24,-19,-16,]),'OP_SUB':([14,],[25,]),'STRING':([10,12,13,15,16,17,20,22,23,25,26,27,33,34,35,36,37,39,40,41,42,43,47,48,49,50,51,52,53,54,57,],[16,-27,16,-9,-28,-26,-8,16,16,16,16,16,-11,-30,-21,16,16,-13,16,16,16,16,-10,-29,-20,-25,-12,-23,-22,-24,-19,]),'RPAREN':([11,12,16,17,21,22,24,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-28,-26,33,35,39,-15,-17,47,-11,-30,-21,49,50,51,-13,52,53,54,-14,-10,-29,-20,-25,-12,-23,-22,-24,57,58,-19,-16,]),'OP_DIV':([14,],[23,]),'ID':([4,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,17,-27,17,22,-9,-28,-26,-8,31,17,17,31,17,17,17,43,45,-15,-17,31,-11,-30,-21,17,17,31,-13,17,17,17,17,56,-18,-14,-10,-29,-20,-25,-12,-23,-22,-24,-19,-16,]),'OUTPUT':([14,],[24,]),'INPUT':([14,],[21,]),'NUMBER':([10,12,13,15,16,17,20,22,23,25,26,27,33,34,35,36,37,39,40,41,42,43,47,48,49,50,51,52,53,54,57,],[12,-27,12,-9,-28,-26,-8,12,12,12,12,12,-11,-30,-21,12,12,-13,12,12,12,12,-10,-29,-20,-25,-12,-23,-22,-24,-19,]),'OP_ADD':([14,],[26,]),'OP_MUL':([14,],[27,]),'ASSIGN':([14,],[28,]),'IMPORT':([1,],[7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([29,],[44,]),'declaration':([21,24,32,38,],[30,30,46,46,]),'statement_list':([0,],[2,]),'program':([0,],[3,]),'parameter_list':([22,23,25,26,27,],[36,37,40,41,42,]),'import_statement':([0,2,],[5,8,]),'declaration_list':([21,24,],[32,38,]),'expression':([10,13,22,23,25,26,27,36,37,40,41,42,43,],[15,20,34,34,34,34,34,48,48,48,48,48,55,]),'component':([0,2,],[6,9,]),'expression_list':([10,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',27),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',29),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',38),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',43),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',49),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',50),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',59),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',68),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',69),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',77),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',78),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',87),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',88),
  ('type -> ID','type',1,'p_type','parser.py',97),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',103),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',108),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',109),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',117),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',122),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',127),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',132),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',147),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',152),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',153),
]
