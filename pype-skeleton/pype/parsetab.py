
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '26E79EA219BABE58EBECA722E7EA800C'
    
_lr_action_items = {'OUTPUT':([11,],[18,]),'OP_DIV':([11,],[23,]),'RBRACE':([12,13,14,15,16,27,31,34,41,46,48,50,51,52,53,54,57,],[-9,-28,-26,-27,26,-8,-13,-11,-21,-12,-10,-22,-24,-23,-25,-20,-19,]),'LPAREN':([0,1,2,5,7,8,9,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[6,6,-5,-4,-2,-3,11,-9,-28,-26,-27,11,29,29,11,11,11,11,11,-7,-8,-6,-17,-13,29,-15,-11,29,-30,11,11,11,11,-21,11,11,-12,-14,-10,-29,-22,-24,-23,-25,-20,-19,-16,]),'INPUT':([11,],[19,]),'RPAREN':([13,14,15,17,18,19,24,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,31,34,41,-17,-13,46,-15,-11,48,-30,50,51,52,53,-21,54,-12,-14,-10,-29,-22,-24,-23,-25,-20,57,58,-19,-16,]),'OP_ADD':([11,],[20,]),'STRING':([9,12,13,14,15,16,20,21,22,23,24,27,31,34,36,37,38,39,40,41,42,43,46,48,49,50,51,52,53,54,57,],[13,-9,-28,-26,-27,13,13,13,13,13,13,-8,-13,-11,-30,13,13,13,13,-21,13,13,-12,-10,-29,-22,-24,-23,-25,-20,-19,]),'IMPORT':([6,],[10,]),'OP_MUL':([11,],[21,]),'$end':([1,2,4,5,7,8,26,28,],[-1,-5,0,-4,-2,-3,-7,-6,]),'ID':([3,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[9,14,17,24,-9,-28,-26,-27,14,30,30,14,14,14,14,14,43,-8,45,-17,-13,30,-15,-11,30,-30,14,14,14,14,-21,14,14,56,-18,-12,-14,-10,-29,-22,-24,-23,-25,-20,-19,-16,]),'LBRACE':([0,1,2,5,7,8,26,28,],[3,3,-5,-4,-2,-3,-7,-6,]),'ASSIGN':([11,],[25,]),'NUMBER':([9,12,13,14,15,16,20,21,22,23,24,27,31,34,36,37,38,39,40,41,42,43,46,48,49,50,51,52,53,54,57,],[15,-9,-28,-26,-27,15,15,15,15,15,15,-8,-13,-11,-30,15,15,15,15,-21,15,15,-12,-10,-29,-22,-24,-23,-25,-20,-19,]),'OP_SUB':([11,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([29,],[44,]),'statement_list':([0,],[1,]),'component':([0,1,],[2,7,]),'expression':([9,16,20,21,22,23,24,37,38,39,40,42,43,],[12,27,36,36,36,36,36,49,49,49,49,49,55,]),'parameter_list':([20,21,22,23,24,],[37,38,39,40,42,]),'program':([0,],[4,]),'expression_list':([9,],[16,]),'declaration_list':([18,19,],[32,35,]),'import_statement':([0,1,],[5,8,]),'declaration':([18,19,32,35,],[33,33,47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',9),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',16),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',17),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',18),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',30),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',35),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',41),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',42),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_inputexpression','parser.py',51),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_inputexpression','parser.py',52),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_outputexpression','parser.py',60),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_outputexpression','parser.py',61),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',69),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',70),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',79),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',80),
  ('type -> ID','type',1,'p_type','parser.py',89),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',95),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_id_parens','parser.py',100),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_id_parens','parser.py',101),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_plus','parser.py',109),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_minus','parser.py',114),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',119),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',124),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',129),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',134),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',139),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',144),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',145),
]
